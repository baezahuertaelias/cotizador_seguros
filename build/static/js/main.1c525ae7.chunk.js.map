{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primeraMayus","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1c525ae7.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst ContenedorHeader = styled.header`\n    background-color: #26C6DA;\n    padding: 10px;\n    font-weight: bold;\n    color: #FFFFFF;\n`;\n\nconst TextoHeader = styled.h1`\n    font-size: 2rem;\n    margin:0;\n    font-family: 'Slabo 27px', serif;\n    text-align: center;\n`;\n\nconst Header = ({titulo}) => {\n    return ( \n        <ContenedorHeader>\n            <TextoHeader>{titulo}</TextoHeader>\n        </ContenedorHeader>\n     );\n}\n\nHeader.propTypes = {\n    titulo: PropTypes.string.isRequired\n}\n \nexport default Header;","/* Obtiene la diferencia de a単os */\nexport function obtenerDiferenciaYear(year){\n    return new Date().getFullYear() - year;\n};\n\n/* Calcula el total a pagar segun la marca */\nexport function calcularMarca(marca){\n    let incremento;\n\n    switch (marca) {\n        case 'europeo':\n            incremento = 1.30;\n            break;\n        \n        case 'americano':\n            incremento = 1.15;\n            break;\n        \n        case 'asiatico':\n            incremento = 1.05;\n            break;\n        \n        default:\n            break;\n    }\n    return incremento;\n};\n\n/* Calcula el tipo de seguro */\nexport function obtenerPlan(plan){\n    return (plan === 'basico'? 1.20 : 1.50);\n};\n\n/* Crear mayusculas */\nexport function primeraMayus(texto){\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\n}","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helper';\n\n\nconst Campo = styled.div`\n    display:flex;\n    margin-bottom: 1rem;\n    align-items: center;\n`;\n\nconst Label = styled.label`\n    flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n    display: block;\n    width: 100%;\n    padding: 1rem;\n    border: 1px solid #E1E1E1;\n    -webkit-appareance: none;\n`;\n\nconst InputRadio = styled.input`\n    margin: 0 1rem;\n`;\n\nconst Boton = styled.button`\n    background-color: #00838F;\n    font-size: 16px;\n    width: 100%;\n    padding: 1rem;\n    color: #FFF;\n    text-transform: uppercase;\n    font-weight: bold;\n    border: none;\n    transition: background-color .3s ease;\n    margin-top: 2rem;\n\n    &:hover{\n        background-color: #26C6DA;\n        cursor: pointer;\n    }\n`;\n\nconst Error = styled.div`\n    background-color: red;\n    color:white;\n    padding: 1rem;\n    width:100%;\n    text-align: center;\n    margin-bottom: 2rem;\n`;\n\n\nconst Formulario = ({ guardarResumen, guardarCargando }) => {\n\n    const [datos, guardarDatos] = useState({\n        marca: '',\n        year: '',\n        plan: ''\n    });\n\n    const [error, guardarError] = useState(false);\n\n    /* Extraer valores del state */\n    const { marca, year, plan } = datos;\n\n    /* Leer valores del formulario y agregarlos al state*/\n    const obtenerInformacion = e => {\n        guardarDatos({\n            ...datos,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    /* Cuando el usuario presiona el submit */\n    const cotizarSeguro = e => {\n        e.preventDefault();\n\n        if (marca === '' || year === '' || plan === '') {\n            guardarError(true);\n            return;\n        }\n\n        guardarError(false);\n\n        /* La base del a単o */\n        let resultado = 2000;\n\n        /* Obtener la diferencia de a単os */\n        const diferencia = obtenerDiferenciaYear(year);\n\n\n        /* Por cada a単o hay que restar un 3% */\n        resultado -= ((diferencia * 3) * resultado) / 100;\n\n        /* Los valores por marca es: Americano 15%, Europeo 30%, Asiatico 5% */\n        resultado = calcularMarca(marca) * resultado;\n\n        /* Los valores por plan de seguro es: basico 20% y completo 50% */\n        const incrementoPlan = obtenerPlan(plan);\n\n        /* Calcular */\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n\n        /* Muestra el spinner */\n        guardarCargando(true);\n\n        /* Espera tres segundos para eliminar el spinner y muestre el resultado */\n        setTimeout(() => {\n            /* Elimina el spinner */\n            guardarCargando(false)\n\n            /* Pasa los datos al componente principal */\n            guardarResumen({\n                cotizacion: Number(resultado),\n                datos\n            })\n        }, 3000);\n    }\n\n    return (\n        <form\n            onSubmit={cotizarSeguro}\n        >\n\n            {error ? <Error>Todos los campos son obligatorios</Error> : null}\n\n            <Campo>\n                <Label>Marca</Label>\n                <Select\n                    name=\"marca\"\n                    value={marca}\n                    onChange={obtenerInformacion}\n                >\n                    <option value=\"\">-- Seleccione --</option>\n                    <option value=\"americano\">Americano</option>\n                    <option value=\"europeo\">Europeo</option>\n                    <option value=\"asiatico\">Asi叩tico</option>\n                </Select>\n            </Campo>\n\n            <Campo>\n                <Label>A単o</Label>\n                <Select\n                    name=\"year\"\n                    value={year}\n                    onChange={obtenerInformacion}\n                >\n                    <option value=\"\">-- Seleccione --</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                    <option value=\"2018\">2018</option>\n                    <option value=\"2017\">2017</option>\n                    <option value=\"2016\">2016</option>\n                    <option value=\"2015\">2015</option>\n                    <option value=\"2014\">2014</option>\n                    <option value=\"2013\">2013</option>\n                    <option value=\"2012\">2012</option>\n                </Select>\n            </Campo>\n\n            <Campo>\n                <Label>Plan</Label>\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"basico\"\n                    checked={plan === 'basico'}\n                    onChange={obtenerInformacion}\n                />B叩sico\n\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"completo\"\n                    checked={plan === 'completo'}\n                    onChange={obtenerInformacion}\n                />Completo\n            </Campo>\n\n            <Boton\n                type=\"submit\"\n            >Cotizar</Boton>\n        </form>\n\n    );\n};\n\nFormulario.propTypes = {\n    guardarResumen: PropTypes.func.isRequired,\n    guardarCargando: PropTypes.func.isRequired\n}\n\nexport default Formulario;","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nimport {primeraMayus} from '../helper';\n\nconst ContenedorResumen = styled.div`\npadding: 1rem;\ntext-align: center;\nbackground-color: #00838F;\ncolor: #FFF;\nmargin-top: 1rem;\n`;\n\n\nconst Resumen = ({ datos }) => {\n\n    /* Extraer datos */\n    const { marca, year, plan } = datos;\n\n    if (marca === '' || year === '' || plan === '') return null;\n\n    return (\n        <ContenedorResumen>\n            <h2>Resumen de cotizacion</h2>\n\n            <ul>\n                <li>Marca: {primeraMayus(marca)} </li>\n                <li>Plan: {primeraMayus(plan)}</li>\n                <li>A単o: {year} </li>\n            </ul>\n        </ContenedorResumen>\n\n    );\n}\n\nResumen.propTypes = {\n    datos: PropTypes.object.isRequired\n}\n\n\nexport default Resumen;","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n\nconst Mensaje = styled.p`\nbackground-color: rgb(127,224, 237);\nmargin-top: 2rem;\npadding: 1rem;\ntext-align: center;\n`;\n\nconst ResultadoCotizacion = styled.div`\ntext-align: center;\npadding: .5rem;\nborder: 1px solid #26C6DA;\nbackground-color: rgb(127,224, 237);\nmargin-top: 1rem;\nposition:relative; \n`;\n\nconst TextoCotizacion = styled.p`\ncolor: #00838F;\npadding: 1rem;\ntext-transform: uppercase;\nfont-weight: bold;\nmargin:0;\n`;\n\nconst Resultado = ({ cotizacion }) => {\n\n    return (\n        /* Reviso que los datos sean validos, si no, no se muestra texto en pantalla */\n        (cotizacion === 0) ? <Mensaje>Elige marca, a単o y tipo de seguro</Mensaje>\n        :\n        /* TransitionGroup y CSSTransition es para generar animaciones */\n            (\n                <ResultadoCotizacion>\n                    <TransitionGroup\n                        component=\"span\"\n                        className=\"resultado\"\n                    >\n                        <CSSTransition\n                            classNames=\"resultado\"\n                            key={cotizacion}\n                            timeout={{enter:500, exit:500}}\n                        >\n                        <TextoCotizacion>El total es: <span>${cotizacion}</span> </TextoCotizacion>\n                        </CSSTransition>\n                    </TransitionGroup>\n                </ResultadoCotizacion>\n            )\n    )\n}\n\nResultado.propTypes = {\n    cotizacion : PropTypes.number.isRequired\n}\n\nexport default Resultado;","import React from 'react';\nimport './Spinner.css'\n\nconst Spinner = () => {\n    return ( \n    <div className=\"sk-cube-grid\">\n    <div className=\"sk-cube sk-cube1\"></div>\n    <div className=\"sk-cube sk-cube2\"></div>\n    <div className=\"sk-cube sk-cube3\"></div>\n    <div className=\"sk-cube sk-cube4\"></div>\n    <div className=\"sk-cube sk-cube5\"></div>\n    <div className=\"sk-cube sk-cube6\"></div>\n    <div className=\"sk-cube sk-cube7\"></div>\n    <div className=\"sk-cube sk-cube8\"></div>\n    <div className=\"sk-cube sk-cube9\"></div>\n  </div> );\n}\n \nexport default Spinner;","import React, {useState} from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario'\nimport Resumen from './components/Resumen'\nimport Resultado from './components/Resultado'\nimport Spinner from './components/Spinner'\n\nimport styled from '@emotion/styled';\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFFFFF;\n  padding: 3rem;\n`;\n\nfunction App() {\n\n  /* Datos que van a pasar al formulario, los va a tomar y se van a guardaren el resumen  */\n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n\n  /* Extraccion de datos */\n  const {cotizacion, datos} = resumen;\n\n  /**\n   * En el curso habia un problema en el ultimo paso... No escondia el componente de resumen\n   * asi que le agregue el ternario y problema solucionado\n   */\n\n  return (\n    <Contenedor>\n      <Header\n        titulo=\"Cotizador de seguros\"\n      />\n\n      <ContenedorFormulario>\n        <Formulario\n          guardarResumen={guardarResumen}\n          guardarCargando={guardarCargando}\n        />\n\n        {cargando ? <Spinner/> : null}\n        \n\n        {!cargando ?\n        <Resumen\n          datos={datos}\n        />:null\n        }\n\n        {!cargando ?\n        <Resultado\n        cotizacion={cotizacion}\n       /> : null\n        }\n      </ContenedorFormulario>\n\n    </Contenedor>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}